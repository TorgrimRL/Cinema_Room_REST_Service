import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${project.property('hs.kotlin.version')}"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${project.property('hs.spring.bootVersion')}"
        classpath "io.spring.gradle:dependency-management-plugin:${project.property('hs.spring.dependencyManagementVersion')}"
        classpath "org.jetbrains.kotlin:kotlin-allopen:${project.property('hs.kotlin.version')}"
        classpath "org.jetbrains.kotlin:kotlin-noarg:${project.property('hs.kotlin.version')}"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "kotlin-spring"
apply plugin: "kotlin-jpa"

repositories {
    mavenCentral()
}

sourceSets.main.java.srcDirs = ['src']
sourceSets.main.resources.srcDirs = ['src/resources']
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation("org.testng:testng:7.9.0")
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
}

tasks.withType(KotlinCompile) {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = "17"
    }
}

sourceCompatibility = '17'
targetCompatibility = '17'

test {
    jvmArgs '--add-opens', 'java.base/java.lang=ALL-UNNAMED'
}
springBoot {
    mainClass.set("cinema.ApplicationKt")
}

